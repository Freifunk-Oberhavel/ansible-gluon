---

# build Freifunk gluon images


# fail if it's not a Debian system
- name: Check OS (freifunk-build)
  fail: msg="Not a Debian based system!"
  when: ansible_distribution != 'Debian'


- name: Set build user
  set_fact:
    gluon_build_user: "{{ gluon_unix_user }}"


- name: Build user
  debug:
    msg: "Build user{{':'}} {{ gluon_build_user }}"


- name: Create group
  group:
    name: "{{ gluon_build_user }}"
    state: present
    system: no


- name: Create user
  user:
    name: "{{ gluon_build_user }}"
    comment: "gluon build user"
    shell: /bin/bash
    group: "{{ gluon_build_user }}"
    createhome: yes
    generate_ssh_key: yes
    state: present
    system: no


- name: Get user home directory
  getent:
    database: passwd
    key: "{{ gluon_build_user }}"
    split: ':'


- name: Set user home directory
  set_fact:
    gluon_build_home: "{{ getent_passwd[gluon_build_user][4] }}"


- name: Home
  debug:
    msg: "Build home{{':'}} {{ gluon_build_home }}"





#- name: Stop
#  fail: msg="Stop"



- name: Basic packages
  apt: name={{ item }} state=present
  with_items:
    - git
    - subversion
    - python
    - build-essential
    - gawk
    - unzip
    - zip
    - libncurses5-dev
    - zlib1g-dev
    - libssl-dev
    - sudo
    - ca-certificates
    - ntpdate
    - ntp


- name: Detect if gluon is already checked out
  stat: path={{ gluon_build_home }}/gluon-{{ gluon_version }}
  register: gluon_checked_out


- name: Check out gluon
  become: true
  become_user: "{{ gluon_build_user }}"
  shell:
    cmd: git clone {{ gluon_source }}.git gluon-{{ gluon_version }} -b {{ gluon_version }}
    creates: "{{ gluon_build_home }}/gluon-{{ gluon_version }}"
    chdir: "{{ gluon_build_home }}"
  when: gluon_checked_out.stat.exists != True


- name: Update gluon
  become: true
  become_user: "{{ gluon_build_user }}"
  shell:
    cmd: git pull origin {{ gluon_version }}
    chdir: "{{ gluon_build_home }}/gluon-{{ gluon_version }}"
  when: gluon_checked_out.stat.exists == True


- name: Detect if site config is already checked out
  stat: path={{ gluon_build_home }}/gluon-{{ gluon_version }}/site
  register: site_config_checked_out


- name: Retrieve site config
  become: true
  become_user: "{{ gluon_build_user }}"
  shell:
    cmd: git clone {{ site_config }}.git site
    creates: "{{ gluon_build_home }}/gluon-{{ gluon_version }}/site"
    chdir: "{{ gluon_build_home }}/gluon-{{ gluon_version }}"
  when: site_config_checked_out.stat.exists != True


- name: Update site config
  become: true
  become_user: "{{ gluon_build_user }}"
  shell:
    cmd: git pull
    chdir: "{{ gluon_build_home }}/gluon-{{ gluon_version }}/site"
  when: site_config_checked_out.stat.exists == True


- name: Run 'make update'
  become: true
  become_user: "{{ gluon_build_user }}"
  shell:
    cmd: make update
    chdir: "{{ gluon_build_home }}/gluon-{{ gluon_version }}"


- name: check if output files from previous builds exist
  stat: path={{ gluon_build_home }}/build-gluon-log.txt
  register: build_gluon_log
  changed_when: False


- block:
  - name: Runtime notification
    debug: msg="The next step will take a long time, the log will be in {{ gluon_build_home }}/build-gluon-log.txt"


  - name: Run 'make'
    become: true
    become_user: "{{ gluon_build_user }}"
    shell:
      cmd: screen -S gluon -d -m /bin/bash -c "make GLUON_TARGET={{ gluon_target }} > {{ gluon_build_home }}/build-gluon-log.txt 2>&1"
      chdir: "{{ gluon_build_home }}/gluon-{{ gluon_version }}"

  when: build_gluon_log.stat.exists != True


- name: Build already exists
  fail: msg="Output file from previous build exists! ({{ gluon_build_home }}/build-gluon-log.txt)"
  when: build_gluon_log.stat.exists == True






- meta: flush_handlers
